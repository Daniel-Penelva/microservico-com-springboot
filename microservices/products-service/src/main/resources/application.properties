spring.application.name=products-service
server.port=0
# O valor zero da porta é para gerar uma porta aletória

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/ms_products
spring.datasource.username=postgres
spring.datasource.password=admin

#Eureka client
eureka.client.service-url.default-zone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Keycloak
#Esta propriedade especifica o URI do conjunto de chaves JSON Web Key (JWK) que contém as chaves públicas usadas para validar tokens JWT. No contexto do OAuth 2.0 e do OpenID Connect, um provedor de identidade normalmente publica um conjunto de chaves (JWK set) que são usadas pelos servidores de recursos para validar a assinatura dos tokens JWT emitidos pelo provedor de identidade.
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/microservices-realm/protocol/openid-connect/certs


#Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/products