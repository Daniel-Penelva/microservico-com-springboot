spring.application.name=notification-service

server.port=0


#Eureka client
eureka.client.service-url.default-zone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/notifications

#Kafka
#Esta propriedade define os servidores Kafka aos quais a aplicação Spring Boot se conectará. A aplicação está configurada para se conectar ao servidor Kafka em localhost na porta 9092.
spring.kafka.bootstrap-servers=localhost:9092

#Essa propriedade define o identificador do grupo ao qual o consumidor Kafka pertence. O grupo de consumidores é uma maneira de agrupar consumidores que compartilham a carga de processamento de mensagens em um tópico específico. Neste caso, o consumidor pertence ao grupo chamado notification-service.
spring.kafka.consumer.group-id=notification-service

#Aqui, é especificado o deserializador de chaves que o consumidor Kafka usará para desserializar as chaves das mensagens recebidas. Neste caso, está sendo utilizado o StringDeserializer fornecido pela biblioteca Kafka.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Esta propriedade define o deserializador de valores que o consumidor Kafka utilizará para desserializar os valores das mensagens recebidas. Novamente, está sendo utilizado o StringDeserializer para desserializar os valores das mensagens como strings.
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
